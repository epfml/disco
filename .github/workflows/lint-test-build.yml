name: lint-test-build
on:
  push:
    branches: production
  pull_request:

env:
  node_version: 16
  lib_dir: discojs/
  lib_core_dir: discojs/discojs-core/
  lib_browser_dir: discojs/discojs/
  lib_node_dir: discojs/discojs-node/
  client_dir: browser/
  server_dir: server/
  benchmark_dir: benchmark/

jobs:
  lint-lib-core:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.lib_core_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: ${{ env.lib_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run lint
      # TODO npx ts-standard

  lint-lib-node:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.lib_node_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: ${{ env.lib_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run lint

  lint-lib-browser:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.lib_browser_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: ${{ env.lib_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run lint

  lint-server:
    needs: build-lib-node
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.server_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
            ${{ env.server_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_node_dir }}
      - run: npm ci
      - run: npx eslint --max-warnings 0 .
      # TODO npx ts-standard

  lint-client:
    needs: build-lib-browser
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.client_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
            ${{ env.client_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_browser_dir }}
      - run: npm ci
      - run: npm run lint

  build-lib-node:
    # needs: lint-lib-node
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.lib_node_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: ${{ env.lib_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build

  build-lib-browser:
    # needs: lint-lib-browser
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.lib_browser_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: ${{ env.lib_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build

  build-server:
    needs: [lint-server, build-lib-node]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.server_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
            ${{ env.server_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_node_dir }}
      - run: npm ci
      - run: npm run build

  build-server-docker:
    needs: build-server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
        with:
          install: true
      - run: docker build .

  build-client:
    needs: [lint-client, build-lib-browser]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.client_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
            ${{ env.client_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_browser_dir }}
      - run: npm ci
      - run: npm run build

  test-lib-core:
    needs: [build-lib-node, build-server-docker, test-server]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.lib_core_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_node_dir }}
      - run: ../../with_server npm test

  test-lib-node:
    needs: [build-lib-node, build-server-docker, test-server]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.lib_node_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_node_dir }}
      - run: ../../with_server npm test

  test-lib-browser:
    needs: [build-lib-node, build-server-docker, test-server]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.lib_browser_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_node_dir }}
      - run: ../../with_server npm test

  test-server:
    needs: build-server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.server_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
            ${{ env.server_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_node_dir }}
      - run: npm ci
      - run: npm test

  test-client:
    needs: [build-client, build-server-docker, test-server]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
            ${{ env.server_dir }}/package-lock.json
            ${{ env.client_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_browser_dir }}
      - run: npm ci
        working-directory: browser/cypress
      - uses: cypress-io/github-action@v4
        with:
          browser: chromium
          start: npm run dev
          wait-on: http://localhost:8080/
          working-directory: ${{ env.client_dir }}
          config: baseUrl=http://localhost:8080/#/

  test-benchmark:
    needs: test-server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.benchmark_dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: |
            ${{ env.lib_dir }}/package-lock.json
            ${{ env.server_dir }}/package-lock.json
            ${{ env.benchmark_dir }}/package-lock.json
      - run: npm ci
        working-directory: ${{ env.lib_dir }}
      - run: npm run build
        working-directory: ${{ env.lib_node_dir }}
      - run: npm ci
        working-directory: ${{ env.server_dir }}
      - run: npm ci
      - run: npm run benchmark -- -t cifar10 -u 1 -e 1
