name: lint-test-build
on:
  push:
    branches: production
  pull_request:

env:
  node_version: 16

jobs:
  download-training-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: example_training_data
          key: training_data
      - run: ./get_training_data.sh
        working-directory: ./

  lint-lib-core:
    needs: [build-lib-core, build-lib-node]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-{core,node} run build
      - run: npm --workspace=./discojs/discojs-core run lint

  lint-lib-node:
    needs: build-lib-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-core run build
      - run: npm --workspace=./discojs/discojs-node run lint

  lint-lib-web:
    needs: build-lib-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-core run build
      - run: npm --workspace=./discojs/discojs-web run lint

  lint-server:
    needs: [build-lib-core, build-lib-node]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-{core,node} run build
      - run: npm --workspace=./server run lint

  lint-cli:
    needs: [build-lib-core, build-lib-node, build-server]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace={./discojs/discojs-{core,node},./server} run build
      - run: npm --workspace=./cli run lint

  lint-web-client:
    needs: [build-lib-core, build-lib-web]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-{core,web} run build
      - run: npm --workspace=./web-client run lint

  build-lib-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-core run build

  build-lib-node:
    needs: build-lib-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-core run build
      - run: npm --workspace=./discojs/discojs-node run build

  build-lib-web:
    needs: build-lib-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm run --workspace=./discojs/discojs-core build
      - run: npm run --workspace=./discojs/discojs-web build

  build-server:
    needs: [build-lib-core, build-lib-node]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm run --workspace=./discojs/discojs-{core,node} build
      - run: npm run --workspace=./server build

  build-server-docker:
    needs: build-server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
        with:
          install: true
      - run: docker build .

  build-cli:
    needs: [build-lib-core, build-lib-node, build-server]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm run --workspace={./discojs/discojs-{core,node},./server} build
      - run: npm run --workspace=./cli build

  build-web-client:
    needs: [build-lib-core, build-lib-web]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-{core,web} run build
      - run: npm --workspace=./web-client run build

  test-lib-core:
    needs:
      [
        build-lib-core,
        build-lib-node,
        build-server-docker,
        download-training-data,
      ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: example_training_data
          key: training_data
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-{core,node} run build
      - run: ./with_server npm --workspace=./discojs/discojs-core test

  test-lib-node:
    needs: [build-lib-core, build-server-docker, download-training-data]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: example_training_data
          key: training_data
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-core run build
      - run: ./with_server npm --workspace=./discojs/discojs-node test

  test-lib-web:
    needs: [build-lib-core, build-server-docker, download-training-data]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: example_training_data
          key: training_data
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-core run build
      - run: ./with_server npm --workspace=./discojs/discojs-web test

  test-server:
    needs: [build-lib-core, build-lib-node, download-training-data]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: example_training_data
          key: training_data
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-{core,node} run build
      - run: npm --workspace=./server test

  test-web-client:
    needs: [build-lib-core, build-lib-web, download-training-data]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: example_training_data
          key: training_data
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace=./discojs/discojs-{core,web} run build
      - uses: cypress-io/github-action@v6
        with:
          browser: chromium
          start: npm start
          install: false
          wait-on: http://localhost:8080/
          working-directory: ./web-client
          config: baseUrl=http://localhost:8080/#/

  test-cli:
    needs:
      [build-lib-core, build-lib-node, build-server, download-training-data]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: example_training_data
          key: training_data
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
      - run: npm ci
      - run: npm --workspace={./discojs/discojs-{core,node},./server} run build
      - run: npm --workspace=./cli start -- -t cifar10 -u 1 -e 1
