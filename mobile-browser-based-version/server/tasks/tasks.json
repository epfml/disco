[
  {
    "taskID": "titanic",
    "displayInformation": {
      "taskTitle": "Titanic",
      "summary": "Test our platform by using a publicly available <b>tabular</b> dataset. <br><br> Download the passenger list from the Titanic shipwreck <a class='underline text-primary-dark dark:text-primary-light' href='https://www.kaggle.com/c/titanic'>here</a>. <br> This model predicts the type of person most likely to survive/die based on their characteristics (sex, age, class etc.).",
      "overview": "We all know the unfortunate story of the Titanic: this flamboyant new transatlantic boat that sunk in 1912 in the North Atlantic Ocean. Today, we revist this tragedy by trying to predict the survival odds of the passenger given some basic features.",
      "model": "The current form of the model does not normalize the given data and applies a very simple pre-processing of the data.",
      "tradeoffs": "We are using a small model for this task: 2 connected layers with few nodes and we are using no optimization techniques implemented. This allows fast training but can yield to poor performance.",
      "dataFormatInformation": "This model takes as input a CSV file with 12 columns.  general information about the passenger (sex, age, name ...) and specific related Titanic data such as the ticket class bought by the passenger, its cabin number ... \n pclass: A proxy for socio-economic status (SES) \n 1st = Upper \n 2nd = Middle \n 3rd = Lower \n \n age: Age is fractional if less than 1. If the age is estimated, is it in the form of xx.5 \n \n sibsp: The dataset defines family relations in this way... \n Sibling = brother, sister, stepbrother, stepsister \n Spouse = husband, wife (mistresses and fiancés were ignored) \n \n parch: The dataset defines family relations in this way.. \n Parent = mother, father \n Child = daughter, son, stepdaughter, stepson \n Some children travelled only with a nanny, therefore parch=0 for them. <br><br> The first line of the csv contains the header: <br> PassengerId, Survived, Pclass, Name, Sex, Age, SibSp, Parch, Ticket, Fare, Cabin, Embarked <br> Each susequent row contains the corresponding data.",
      "dataExampleText": "Below one can find an example of a datapoint taken as input by our model. In this datapoint, the person is young man named Owen Harris that unfortunnalty perished with the Titanic. He boarded the boat in South Hamptons and was a 3rd class passenger.On the testing page, the data should not contain the class column (Survived).",
      "dataExample": [
        { "columnName": "PassengerId", "columnData": "1" },
        { "columnName": "Survived", "columnData": "0" },
        { "columnName": "Name", "columnData": "Braund, Mr. Owen Harris" },
        { "columnName": "Sex", "columnData": "male" },
        { "columnName": "Age", "columnData": "22" },
        { "columnName": "SibSp", "columnData": "1" },
        { "columnName": "Parch", "columnData": "0" },
        { "columnName": "Ticket", "columnData": "1/5 21171" },
        { "columnName": "Fare", "columnData": "7.25" },
        { "columnName": "Cabin", "columnData": "E46" },
        { "columnName": "Embarked", "columnData": "S" },
        { "columnName": "Pclass", "columnData": "3" }
      ],
      "headers": [
        "PassengerId",
        "Survived",
        "Name",
        "Sex",
        "Age",
        "SibSp",
        "Parch",
        "Ticket",
        "Fare",
        "Cabin",
        "Embarked",
        "Pclass"
      ]
    },
    "trainingInformation": {
      "modelID": "titanic-model",
      "epochs": 20,
      "roundDuration": 1,
      "validationSplit": 0.2,
      "batchSize": 30,
      "preprocessFunctions": [],
      "modelCompileData": {
        "optimizer": "rmsprop",
        "loss": "binaryCrossentropy",
        "metrics": ["accuracy"]
      },
      "receivedMessagesThreshold": 1,
      "dataType": "tabular",
      "inputColumns": [
        "PassengerId",
        "Age",
        "SibSp",
        "Parch",
        "Fare",
        "Pclass"
      ],
      "outputColumns": [
        "Survived"
      ]
    }
  },
  {
    "taskID": "mnist",
    "displayInformation": {
      "taskTitle": "MNIST",
      "summary": "Test our platform by using a publicly available <b>image</b> dataset. <br><br> Download the classic MNIST imagebank of hand-written numbers <a class='underline text-primary-dark dark:text-primary-light' href='https://www.kaggle.com/scolianni/mnistasjpg'>here</a>. <br> This model learns to identify hand written numbers.",
      "overview": "The MNIST handwritten digit classification problem is a standard dataset used in computer vision and deep learning. Although the dataset is effectively solved, we use it to test our Decentralised Learning algorithms and platform.",
      "model": "The current model is a very simple CNN and its main goal is to test the app and the Decentralizsed Learning functionality.",
      "tradeoffs": "We are using a simple model, first a 2d convolutional layer > max pooling > 2d convolutional layer > max pooling > convolutional layer > 2 dense layers.",
      "dataFormatInformation": "This model is trained on images corresponding to digits 0 to 9. You can upload each digit image of your dataset in the box corresponding to its label. The model taskes images of size 28x28 as input.",
      "dataExampleText": "Below you can find an example of an expected image representing the digit 9.",
      "dataExampleImage": "./9-mnist-example.png"
    },
    "trainingInformation": {
      "modelID": "mnist-model",
      "epochs": 10,
      "roundDuration": 5,
      "validationSplit": 0.2,
      "batchSize": 30,
      "modelCompileData": {
        "optimizer": "rmsprop",
        "loss": "categoricalCrossentropy",
        "metrics": ["accuracy"]
      },
      "threshold": 1,
      "dataType": "image",

      "IMAGE_H": 28,
      "IMAGE_W": 28,
      "preprocessFunctions": [],
      "LABEL_LIST": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
      "aggregateImagesById": false
    }
  },
  {
    "taskID": "lus_covid",
    "displayInformation": {
      "taskTitle": "COVID Lung Ultrasound",
      "summary": "Do you have a dataset of lung ultrasound images on patients <b>suspected of Lower Respiratory Tract infection (LRTI) during the COVID pandemic</b>? <br> Learn how to discriminate between COVID positive and negative patients by joining this task. <br><br> Don’t have a dataset of your own? Download a sample of a few cases <a class='underline text-primary-dark dark:text-primary-light' href='https://drive.switch.ch/index.php/s/zM5ZrUWK3taaIly'>here</a>.",
      "overview": "Do you have a dataset of lung ultrasound images on patients <b>suspected of Lower Respiratory Tract infection (LRTI) during the COVID pandemic</b>? <br> Learn how to discriminate between COVID positive and negative patients by joining this task. <br><br> Don’t have a dataset of your own? Download a sample of a few cases <a class='underline text-primary-dark dark:text-primary-light' href='https://drive.switch.ch/index.php/s/zM5ZrUWK3taaIly'>here</a>.",
      "model": "We use a simplified* version of the <b>DeepChest model</b>: A deep learning model developed in our lab (intelligent Global Health). On a cohort of 400 Swiss patients suspected of LRTI, the model obtained over 90% area under the ROC curve for this task. <br><br>*Simplified to ensure smooth running on your browser, the performance is minimally affected. Details of the adaptations are below <br>- <b>Removed</b>: positional embedding (i.e. we don’t take the anatomic position into consideration). Rather, the model now does mean pooling over the feature vector of the images for each patient <br>- <b>Replaced</b>: ResNet18 by Mobilenet",
      "tradeoffs": "We are using a simpler version of DeepChest in order to be able to run it on the browser.",
      "dataFormatInformation": "This model takes as input an image dataset. It consists on a set of lung ultrasound images per patient with its corresponding label of covid positive or negative. Moreover, to identify the images per patient you have to follow the follwing naming pattern: \"patientId_*.png\"",
      "dataExampleText": "Below you can find an example of an expected lung image for patient 2 named: 2_QAID_1.masked.reshaped.squared.224.png",
      "dataExampleImage": "./2_QAID_1.masked.reshaped.squared.224.png"
    },
    "trainingInformation": {
      "modelID": "lus-covid-model",
      "epochs": 15,
      "roundDuration": 5,
      "validationSplit": 0.2,
      "batchSize": 2,
      "modelCompileData": {
        "optimizer": "adam",
        "loss": "binaryCrossentropy",
        "metrics": ["accuracy"]
      },
      "learningRate": 0.05,
      "threshold": 2,
      "IMAGE_H": 224,
      "IMAGE_W": 224,
      "preprocessFunctions": [],
      "LABEL_LIST": ["COVID-Positive", "COVID-Negative"],
      "NUM_CLASSES": 2,
      "dataType": "image",
      "aggregateImagesById": true
    }
  },
  {
    "taskID": "cifar10",
    "displayInformation": {
      "taskTitle": "CIFAR10",
      "summary": "In this challenge, we ask you to classify images into categories based on the objects shown on the image.",
      "overview": "The CIFAR-10 dataset is a collection of images that are commonly used to train machine learning and computer vision algorithms. It is one of the most widely used datasets for machine learning research.",
      "limitations": "The training data is limited to small images of size 32x32.",
      "tradeoffs": "Training success strongly depends on label distribution",
      "dataFormatInformation": "Images should be of .png format and of size 32x32. <br> The label file should be .csv, where each row contains a file_name, class.  <br> <br> e.g. if you have images: 0.png (of a frog) and 1.png (of a car) <br> labels.csv contains: (Note that no header is needed)<br> 0.png, frog <br> 1.png, car",
      "dataExampleText": "Below you can find 10 random examples from each of the 10 classes in the dataset.",
      "dataExampleImage": "./cifar10-example.png"
    },
    "trainingInformation": {
      "modelID": "cifar10-model",
      "epochs": 10,
      "roundDuration": 5,
      "validationSplit": 0.2,
      "batchSize": 10,
      "modelCompileData": {
        "optimizer": "adam",
        "loss": "categoricalCrossentropy",
        "metrics": ["accuracy"]
      },
      "threshold": 1,
      "dataType": "image",
      "csvLabels": true,
      "IMAGE_H": 32,
      "IMAGE_W": 32,
      "preprocessFunctions": ["resize"],
      "RESIZED_IMAGE_H": 224,
      "RESIZED_IMAGE_W": 224,
      "LABEL_LIST": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
      "LABEL_ASSIGNMENT": {
        "airplane": 0,
        "automobile": 1,
        "bird": 2,
        "cat": 3,
        "deer": 4,
        "dog": 5,
        "frog": 6,
        "horse": 7,
        "ship": 8,
        "truck": 9
      }
    }
  }
]
